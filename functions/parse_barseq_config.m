function input=parse_barseq_config(config_fname)
%% scope settings, ALWAYS LOWERCASE!
% This section and next should probably become a configuration file, but
% relatively stable and not provided by the operator. These are lab
% specific and only need to change when the microscopes are recalibrated.
alder_settings=struct;
alder_settings.chprofile20x_name='chprofile20x-50-30-20-40-20220218.mat';
alder_settings.chshift20x_name='chshift20x-20220218.mat';
alder_settings.chprofilehyb=[...
    1 0 0 0;...
    0.52 1 0 0;...
    0 0 1 0;...
    0 0 0 1];
alder_settings.chshifthyb=[...
    0 -3;...
    0 0;...
    0 0;...
    -1 4 ...
    ]; 
% need to update these:
birch_settings=struct;
birch_settings.chprofile20x_name='chprofile20x-scope2-20230517.mat';
birch_settings.chshift20x_name='chshift20x-scope2-20230510.mat';
birch_settings.chprofilehyb=[...
    1 0 0 0;...
    0.52 1 0 0;...
    0 0 1 0;...
    0 0 0 1];
birch_settings.chshifthyb=[...
    0 -3;...
    0 0;...
    0 0;...
    -1 4 ...
    ]; 


cypress_settings=struct;
cypress_settings.chprofile20x_name='chprofile20x-cypress-20231122.mat';
cypress_settings.chshift20x_name='chshift20x-scopeCypress-20231218.mat';
cypress_settings.chprofilehyb=[...
    1 0 0 0;...
    0.52 1 0 0;...
    0 0 1 0;...
    0 0 0 1];
cypress_settings.chshifthyb=[...
    0 -3;...
    0 0;...
    0 0;...
    -1 4 ...
    ]; 

dogwood_settings=struct;
dogwood_settings.chprofile20x_name='chprofile20x-scopeDogwood-20231208.mat';
dogwood_settings.chshift20x_name='chshift20x-scopeDogwood-20231208.mat';
dogwood_settings.chprofilehyb=[...
    1 0 0 0;...
    0.52 1 0 0;...
    0 0 1 0;...
    0 0 0 1];
dogwood_settings.chshifthyb=[...
    0 -3;...
    0 0;...
    0 0;...
    -1 4 ...
    ]; 

elm_settings=struct;
elm_settings.chprofile20x_name='chprofile20x-Elm-20240228.mat';
elm_settings.chshift20x_name='chshift20x-Elm-20240228.mat';
elm_settings.chprofilehyb=[...
    1 0 0 0;...
    0.52 1 0 0;...
    0 0 1 0;...
    0 0 0 1];
elm_settings.chshifthyb=[...
    0 -3;...
    0 0;...
    0 0;...
    -1 4 ...
    ]; 

%% lookup table from scope names to scope settings
scope_settings=dictionary( ...
    'alder',alder_settings, ...
    'birch',birch_settings, ...
    'cypress',cypress_settings, ...
    'dogwood',dogwood_settings, ...
    'elm',elm_settings ...
    );


%% Read inputs
%config_fname='config.json';
txt=fileread(config_fname);
input=jsondecode(txt);


%% Verify inputs
% try
    assert(isnumeric(input.batch_num),'Error. batch_num is not a number.\n')
    assert(isnumeric(input.startingsliceidx),'Error. startingsliceidx is not a number.\n')
    assert(input.use_predefined_thresh==0||input.use_predefined_thresh==1,'Error. use_predefined_thresh should be 0 or 1.\n')
    assert(isKey(scope_settings,lower(input.scope_name)),'Error. scope_name is not in the list of scopes.\n')
    assert(ischar(input.codebook_name),'Error. codebook_name is not valid.\n')
    assert(ischar(input.codebookhyb_name),'Error. codebookhyb_name is not valid.\n')
    assert(input.is_barcoded==0||input.is_barcoded==1,'Error. is_barcoded should be 0 or 1.\n')
    assert(isnumeric(input.count_thresh),'Error. count_thresh is not a number.\n')
    assert(isnumeric(input.err_corr_thresh),'Error. err_corr_thresh is not a number.\n')
    assert(size(input.hybthresh,2)==4,'Error. hybthresh should be an n x 4 matrix.\n')
    assert(size(input.hybbgn,2)==4,'Error. hybbgn should be an n x 4 matrix.\n')
    assert(size(input.rolthresh,2)==4,'Error. rolthresh should be an n x 4 matrix.\n')
% catch
%     error('Error. Missing inputs, aborting.\n')
% end
%% add additional inputs
if isfile(input.codebook_name)&&isfile(input.codebookhyb_name)
    input.codebook=load(input.codebook_name);
    input.codebookhyb=load(input.codebookhyb_name);
else
    error('Codebooks do not exist.\n')
end


input.scope_settings=scope_settings(input.scope_name);

S=load(input.scope_settings.chprofile20x_name,'chprofile20x');
input.scope_settings.chprofile20x=S.chprofile20x;
S=load(input.scope_settings.chshift20x_name,'chshift20x');
input.scope_settings.chshift20x=S.chshift20x;


%% save inputs for record keeping and for a01
save([input.dataset_id,'_input.mat'],'input');
end

    


